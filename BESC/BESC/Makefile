# This file was automagically generated by mbed.org. For more information, 
# see http://mbed.org/handbook/Exporting-to-GCC-ARM-Embedded

GCC_BIN := C:/Program Files (x86)/GNU Tools ARM Embedded/5.3 2016q1/bin/

PROJECT := BESC
OBJECTS := $(patsubst %.c,%.o,$(wildcard *.c)) $(patsubst %.cpp,%.o,$(wildcard *.cpp))
SYS_OBJECTS = ../../Libraries/devices/MKL03Z4/gcc/startup_MKL03Z4.o ../../Libraries/devices/MKL03Z4/system_MKL03Z4.o
_DRVR_OBJ = fsl_adc16.o fsl_clock.o fsl_cmp.o fsl_common.o fsl_cop.o fsl_flash.o fsl_gpio.o fsl_i2c.o fsl_llwu.o \
						fsl_lptmr.o fsl_lpuart.o fsl_pmc.o fsl_rcm.o fsl_rtc.o fsl_sim.o fsl_smc.o fsl_spi.o fsl_tpm.o fsl_vref.o 
						# fsl_i2c_freertos.o fsl_lpuart_freertos.o fsl_spi_freertos.o 
DRVR_OBJ = $(addprefix ../../Libraries/devices/MKL03Z4/drivers/,$(_DRVR_OBJ))

_UTIL_OBJ := fsl_debug_console.o fsl_notifier.o fsl_sbrk.o fsl_shell.o
UTIL_OBJ := $(addprefix ../../Libraries/devices/MKL03Z4/utilities/,$(_UTIL_OBJ))

INCLUDE_PATHS = -I. -I../../Libraries -I../../Libraries/CMSIS/Include -I../../Libraries/devices/MKL03Z4/ \
						-I../../Libraries/devices/MKL03Z4/drivers/ -I../../Libraries/devices/MKL03Z4/utilities/
LINKER_SCRIPT = ../../Libraries/devices/MKL03Z4/gcc/MKL03Z16xxx4_flash.ld

############################################################################### 
AS      := "$(GCC_BIN)arm-none-eabi-as"
CC      := "$(GCC_BIN)arm-none-eabi-gcc"
CPP     := "$(GCC_BIN)arm-none-eabi-g++"
LD      := "$(GCC_BIN)arm-none-eabi-gcc"
OBJCOPY := "$(GCC_BIN)arm-none-eabi-objcopy"
OBJDUMP := "$(GCC_BIN)arm-none-eabi-objdump"
SIZE    := "$(GCC_BIN)arm-none-eabi-size"

# For DEBUG

COMMON_FLAGS = -mcpu=cortex-m0plus -mthumb -mfloat-abi=soft -g -Wall -fno-common -ffunction-sections -fdata-sections -ffreestanding -fno-builtin -mapcs 

ASM_FLAGS = $(COMMON_FLAGS) -D__STARTUP_CLEAR_BSS

#CC_FLAGS = $(COMMON_FLAGS) -c -g -fno-common -fmessage-length=0 -Wall -Wextra -fno-exceptions -ffunction-sections -fdata-sections -fomit-frame-pointer -MMD -MP
CC_FLAGS = $(COMMON_FLAGS) -c -MMD -MP $(LD_SYS_LIBS)
CC_SYMBOLS = -DTOOLCHAIN_GCC_ARM -DCPU_MKL03Z32VFK4 -DFRDM_KL03Z -DFREEDOM

LD_FLAGS = $(COMMON_FLAGS) -Xlinker --gc-sections -Xlinker -static -Xlinker -z -Xlinker muldefs --specs=nano.specs 
LD_SYS_LIBS = -lstdc++ -lsupc++ -lm -lc -lgcc -lnosys


DEBUG:=1
ifeq ($(DEBUG), 1)
  ASM_FLAGS += -DDEBUG
  CC_FLAGS += -DDEBUG -O0
else
  ASM_FLAGS += -DNDEBUG
  CC_FLAGS += -DNDEBUG -Os
endif

.PHONY: all clean lst size flash

all: $(PROJECT).bin $(PROJECT).hex size

clean: 
	rm -f $(PROJECT).bin $(PROJECT).elf $(PROJECT).hex $(PROJECT).map $(PROJECT).lst $(OBJECTS) $(DEPS) $(DRVR_OBJ) $(UTIL_OBJ)
# rm -f $(PROJECT).bin $(PROJECT).elf $(PROJECT).hex $(PROJECT).map $(PROJECT).lst $(OBJECTS) $(DRVR_OBJ) $(DEPS)


.asm.o:
	$(CC) $(ASM_FLAGS) -c -x assembler-with-cpp -o $@ $<
.s.o:
	$(CC) $(ASM_FLAGS) -c -x assembler-with-cpp -o $@ $<
.S.o:
	$(CC) $(ASM_FLAGS) -c -x assembler-with-cpp -o $@ $<

.c.o:
	$(CC)  $(CC_FLAGS) $(CC_SYMBOLS) -std=gnu99   $(INCLUDE_PATHS) -o $@ $<

.cpp.o:
	$(CPP) $(CC_FLAGS) $(CC_SYMBOLS) -std=gnu++11 -fno-rtti $(INCLUDE_PATHS) -o $@ $<



$(PROJECT).elf: $(OBJECTS) $(SYS_OBJECTS) $(DRVR_OBJ) $(UTIL_OBJ)
	$(LD) $(LD_FLAGS) -T$(LINKER_SCRIPT) $(LIBRARY_PATHS) -o $@ $^ $(LIBRARIES) $(LD_SYS_LIBS) $(LIBRARIES) $(LD_SYS_LIBS)


$(PROJECT).bin: $(PROJECT).elf
	$(OBJCOPY) -O binary $< $@

$(PROJECT).hex: $(PROJECT).elf
	@$(OBJCOPY) -O ihex $< $@

$(PROJECT).lst: $(PROJECT).elf
	@$(OBJDUMP) -Sdh $< > $@

lst: $(PROJECT).lst

size: $(PROJECT).elf
	$(SIZE) $(PROJECT).elf

flash: 
	"C:\Program Files (x86)\SEGGER\JLink_V600d\JLink.exe" -Device MKL03Z16XXX4 -CommandFile .\flash.jlink
	

DEPS = $(OBJECTS:.o=.d) $(SYS_OBJECTS:.o=.d) $(DRVR_OBJ:.o=.d)  $(UTIL_OBJ:.o=.d)
-include $(DEPS)



# This file was automagically generated by mbed.org. For more information, 
# see http://mbed.org/handbook/Exporting-to-GCC-ARM-Embedded

GCC_BIN := C:/Program Files (x86)/GNU Tools ARM Embedded/5.3 2016q1/bin/

PROJECT := BESC

_OBJ := main.o init.o stm32f1xx_it.o stm32f1xx_hal_msp.o
OBJ := $(addprefix ./obj/,$(_OBJ))

_SYS_OBJ := system_stm32f1xx.o gcc/startup_stm32f103xb.o
SYS_OBJ := $(addprefix ./Drivers/CMSIS/Device/ST/STM32F1xx/Source/Templates/,$(_SYS_OBJ))

_DRVR_OBJ := stm32f1xx_hal.o stm32f1xx_hal_can.o stm32f1xx_hal_cortex.o stm32f1xx_hal_crc.o stm32f1xx_hal_dma.o stm32f1xx_hal_flash.o stm32f1xx_hal_flash_ex.o stm32f1xx_hal_gpio.o \
	stm32f1xx_hal_gpio_ex.o stm32f1xx_hal_i2c.o stm32f1xx_hal_pwr.o stm32f1xx_hal_rcc.o stm32f1xx_hal_rcc_ex.o stm32f1xx_hal_spi.o stm32f1xx_hal_spi_ex.o stm32f1xx_hal_tim.o \
	stm32f1xx_hal_tim_ex.o stm32f1xx_hal_uart.o stm32f1xx_hal_wwdg.o
DRVR_OBJ := $(addprefix ./Drivers/STM32F1xx_HAL_Driver/Src/,$(_DRVR_OBJ))


INCLUDE_PATHS := -I. -I./inc -I./Drivers -I./Drivers/CMSIS/Device/ST/STM32F1xx/Include -I./Drivers/CMSIS/Include -I./Drivers/STM32F1xx_HAL_Driver/Inc
LINKER_SCRIPT := ./STM32F103C8T6.ld

############################################################################### 
AS      := "$(GCC_BIN)arm-none-eabi-as"
CC      := "$(GCC_BIN)arm-none-eabi-gcc"
CPP     := "$(GCC_BIN)arm-none-eabi-g++"
LD      := "$(GCC_BIN)arm-none-eabi-gcc"
OBJCOPY := "$(GCC_BIN)arm-none-eabi-objcopy"
OBJDUMP := "$(GCC_BIN)arm-none-eabi-objdump"
SIZE    := "$(GCC_BIN)arm-none-eabi-size"

# For DEBUG

LD_SYS_LIBS = -lstdc++ -lsupc++ -lm -lc -lgcc -lnosys
COMMON_FLAGS = -mcpu=cortex-m3 -mthumb -mfloat-abi=soft -g -Wall -fno-common -ffunction-sections -fdata-sections -ffreestanding -fno-builtin -mapcs -DSTM32F10X_MD -DUSE_STDPERIPH_DRIVER

ASM_FLAGS = $(COMMON_FLAGS) -D__STARTUP_CLEAR_BSS

CC_FLAGS = $(COMMON_FLAGS) -c -MMD -MP $(LD_SYS_LIBS)
CC_SYMBOLS := -DTOOLCHAIN_GCC_ARM -D__CORTEX_M3 -DTARGET_CORTEX_M -D__FPU_PRESENT=1 -DTARGET_M3 -DTARGET_STM -DTARGET_STM32F1 -DTOOLCHAIN_GCC -DTARGET_STM32F103T6 -DARM_MATH_CM3

LD_FLAGS = $(COMMON_FLAGS) -Xlinker --gc-sections -Xlinker -static -Xlinker -z -Xlinker muldefs --specs=nano.specs 


#DEBUG := 1
ifeq ($(DEBUG), 1)
  ASM_FLAGS += -DDEBUG
  CC_FLAGS += -DDEBUG -O0
else
  ASM_FLAGS += -DNDEBUG
  CC_FLAGS += -DNDEBUG -Os
endif

.PHONY: all clean lst size flash

all: $(PROJECT).bin $(PROJECT).hex size

clean: 
	rm -f $(PROJECT).bin $(PROJECT).elf $(PROJECT).hex $(PROJECT).map $(PROJECT).lst $(OBJ) $(DEPS) $(SYS_OBJ) $(DRVR_OBJ)
# $(DRVR_OBJ)
# rm -f $(PROJECT).bin $(PROJECT).elf $(PROJECT).hex $(PROJECT).map $(PROJECT).lst $(OBJECTS) $(DEPS)


.asm.o:
	$(CC) $(ASM_FLAGS) -c -x assembler-with-cpp -o $@ $<
.s.o:
	$(CC) $(ASM_FLAGS) -c -x assembler-with-cpp -o $@ $<
.S.o:
	$(CC) $(ASM_FLAGS) -c -x assembler-with-cpp -o $@ $<

.c.o: 
	$(CC)  $(CC_FLAGS) $(CC_SYMBOLS) -std=gnu99   $(INCLUDE_PATHS) -o $@ $<

./obj/%.o: ./src/%.c
	$(CC)  $(CC_FLAGS) $(CC_SYMBOLS) -std=gnu99   $(INCLUDE_PATHS) -o $@ $<

.cpp.o:
	$(CPP) $(CC_FLAGS) $(CC_SYMBOLS) -std=gnu++11 -fno-rtti $(INCLUDE_PATHS) -o $@ $<

./obj/%.o: ./src/%.cpp
	$(CPP) $(CC_FLAGS) $(CC_SYMBOLS) -std=gnu++11 -fno-rtti $(INCLUDE_PATHS) -o $@ $<

$(PROJECT).elf: $(OBJ) $(SYS_OBJ) $(DRVR_OBJ) $(UTIL_OBJ)
	$(LD) $(LD_FLAGS) -T$(LINKER_SCRIPT) $(LIBRARY_PATHS) -o $@ $^ $(LIBRARIES) $(LD_SYS_LIBS) $(LIBRARIES) $(LD_SYS_LIBS)


$(PROJECT).bin: $(PROJECT).elf
	$(OBJCOPY) -O binary $< $@

$(PROJECT).hex: $(PROJECT).elf
	@$(OBJCOPY) -O ihex $< $@

$(PROJECT).lst: $(PROJECT).elf
	@$(OBJDUMP) -Sdh $< > $@

lst: $(PROJECT).lst

size: $(PROJECT).elf
	$(SIZE) $(PROJECT).elf
	

DEPS = $(OBJ:.o=.d) $(SYS_OBJ:.o=.d) $(DRVR_OBJ:.o=.d)  $(UTIL_OBJ:.o=.d)
-include $(DEPS)


